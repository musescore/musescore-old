%
% mscore
%     MuseScore extensions
%
% source file of LilyPond's pretty-but-neat music font
%
% (c) 1997--2007 Jan Nieuwenhuizen <janneke@gnu.org>
% & Han-Wen Nienhuys <hanwen@xs4all.nl>
% & Juergen Reuter <reuter@ipd.uka.de>
% & Werner Schweer <ws@seh.de>
%

fet_begingroup ("mscore");

save outer_path;
path outer_path;

save black_notehead_width;

%----------------------------------------------------------
%     half note with stem
%----------------------------------------------------------

fet_beginchar ("Half note", "no1");
      %
      %     draw note head
      %

	draw_outside_ellipse (1.53 - puff_up_factor / 3.0, 34, 0.66, 0.17);
	undraw_inside_ellipse (3.25, 33, 0.81, 2.5 stafflinethickness#);
	draw_staff (-2, 2, 0);

      %
      % draw stem
      %

      pickup pencircle scaled stemthickness;
      hw := width - .5 stemthickness;

      pair unten;
      pair oben;
	unten := directionpoint up of pat + (-.5 stemthickness, 0);
      oben  := unten + (0, 3.5 staff_space);

      draw unten -- oben;
fet_endchar;

%----------------------------------------------------------
%     quarter note with stem
%----------------------------------------------------------

fet_beginchar ("Quart note", "no2");
      %
      %     draw note head
      %

	draw_outside_ellipse (1.49 - puff_up_factor / 3.0, 31, 0.707, 0);
	black_notehead_width# := charwd;

      %
      % draw stem
      %

      pickup pencircle scaled stemthickness;

      hw := width - .5 stemthickness;

      pair unten;
      pair oben;
	unten := directionpoint up of pat + (-.5 stemthickness, 0);
      oben  := unten + (0, 3.5 staff_space);
      draw unten -- oben;

      fet_endchar;


save upflag_width, downflag_width, right_upflag_space, right_downflag_space;
save hip_thickness, foot_thickness;

upflag_width#         = .65 black_notehead_width# + stemthickness# / 2;
downflag_width#       = .833 black_notehead_width# + stemthickness# / 2;
right_upflag_space#   = .0 upflag_width#;
right_downflag_space# = .0 downflag_width#;
hip_thickness#        = 1.0 linethickness# + 0.069 staff_space#;
foot_thickness#       = 1.2055 linethickness# + 0.06 staff_space#;

define_pixels (hip_thickness, foot_thickness);

%----------------------------------------------------------
%     draw_flag
%----------------------------------------------------------

def draw_flag (expr center, flare, dims, hip_depth, foot_wid, hip_thickness,
   foot_thickness, show_labels) =

	save c;
	clearxy;
	c = 0.7;

	penpos1 (flare, 90);
	penpos2 (whatever, 0);
	x2r - x2l = hround (hip_thickness);
	penpos3 (foot_thickness, -20.0);

	z1r = center;
	z2r = center + (xpart (dims), -ypart (dims) * hip_depth);
	z3r = center + (xpart (dims) * foot_wid, -ypart (dims));

	x2r := hround x2r;
	y2r := vround y2r;

	outer_path := z3r{curl c}
		      .. z2r{up}
		      .. {up}z1r;

	if show_labels = 1:
		penlabels (1, 2, 3);
	fi;

	fill z1l{curl 0}
	     ..tension 1.1.. z2l{down}
	     ..	{curl c}simple_serif (z3l, z3r, 80)
	     & outer_path
	     & z1r
	     -- cycle;
      enddef;

%----------------------------------------------------------
%     add_flag
%----------------------------------------------------------

def add_flag (expr yoff, flare, hip_wid_multiplier, hip_dep_multiplier,
   intersectpoint, hip_thickness, foot_thickness) =
      begingroup
	save prev_center, prev_xextreme, prev_yextreme;
	save rel_foot, ip, center, incision_depth;
	save prev_hipwid, prev_footdep, prev_hipdep, wid, dep, hip_dep;
	save hip_dep_ratio, foot_wid_ratio;
	pair prev_center, center, foot, prev_xextreme, prev_yextreme;
	pair ip, rel_foot;

	incision_depth = 1.013;
	prev_center = point 2 of outer_path;
	prev_xextreme = point 1 of outer_path;
	prev_yextreme = point 0 of outer_path;
	prev_hipwid = xpart (prev_xextreme - prev_center);
	prev_footdep = -ypart (prev_yextreme - prev_center);
	prev_hipdep = -ypart (prev_xextreme - prev_center);
	ip = point intersectpoint of outer_path;

	wid = prev_hipwid * hip_wid_multiplier;
	hip_dep = prev_hipdep * hip_dep_multiplier;

	center = prev_center + (0, yoff);
	rel_foot = incision_depth [(wid, hip_dep), ip - center];
	dep = -ypart (rel_foot);
	foot_wid_ratio = xpart (rel_foot) / wid;
	hip_dep_ratio = hip_dep / dep;

	draw_flag (center, flare, (wid, dep),
		   hip_dep_ratio, foot_wid_ratio,
		   hip_thickness, foot_thickness, 0);
      endgroup
      enddef;


%----------------------------------------------------------
%     1/8 note with stem and flag
%----------------------------------------------------------

fet_beginchar ("Quart note", "no4");
	draw_outside_ellipse (1.49 - puff_up_factor / 3.0, 31, 0.707, 0);
	black_notehead_width# := charwd;

	pickup pencircle scaled stafflinethickness;

      % draw stem

      pickup pencircle scaled stemthickness;
      hw := width - .5 stemthickness;

      pair unten;
      pair oben;
	unten := directionpoint up of pat + (-.5 stemthickness, 0);
      oben  := unten + (0, 3.5 staff_space);
      draw unten -- oben;


      % draw flag

	save flare, hip_depth_ratio, hip_width, foot_depth, foot_width_ratio;

	flare            = staff_space;
	hip_depth_ratio  = .72;
	foot_width_ratio = .8;

	hip_width#       = upflag_width# - hip_thickness# / 2;
	foot_depth#      = 3 staff_space#; % - blot_diameter# / 2;
	define_pixels (hip_width, foot_depth);

      save aaa, bbb, ccc;
      aaa = hip_width# + stemthickness# / 2 + right_upflag_space#;
      bbb = foot_depth# + foot_thickness# / 2;
      ccc = stemthickness# / 2;

%	set_char_box (
%	   black_notehead_width#,
%         aaa, bbb, ccc);

	draw_flag (oben, flare, (hip_width, foot_depth),
		   hip_depth_ratio, foot_width_ratio,
		   hip_thickness, foot_thickness, 1);

      fet_endchar;

%----------------------------------------------------------
%     1/16 note with stem and flag
%----------------------------------------------------------

fet_beginchar ("1/16 note", "no8");
	draw_outside_ellipse (1.49 - puff_up_factor / 3.0, 31, 0.707, 0);
	black_notehead_width# := charwd;

	pickup pencircle scaled stafflinethickness;

      % draw stem

      pickup pencircle scaled stemthickness;
      hw := width - .5 stemthickness;

      pair unten;
      pair oben;
	unten := directionpoint up of pat + (-.5 stemthickness, 0);
      oben  := unten + (0, 3.5 staff_space);
      draw unten -- oben;


      % draw flags

	save flare, hip_depth_ratio, hip_width, foot_depth, foot_width_ratio;
	save flagspace, total_depth, flag_count;

	total_depth# = 3.5 staff_space# - blot_diameter# / 2;
	flag_count = 2;
	flare = .85 staff_space;
	flagspace# = .85 staff_space#;
	hip_depth_ratio = .72;
	hip_width# = upflag_width# - hip_thickness# / 2;
	flagspace# + foot_depth# = total_depth#;
	foot_width_ratio = .8;
	define_pixels (hip_width, foot_depth);
	define_whole_vertical_pixels (flagspace);

%	set_char_box (0,
%		      hip_width# + stemthickness# / 2 + right_upflag_space#,
%		      total_depth# + foot_thickness# / 2, stemthickness# / 2);

	draw_flag (oben + (0, -flagspace), flare, (hip_width, foot_depth),
		   hip_depth_ratio, foot_width_ratio,
		   hip_thickness, foot_thickness, 1);

	add_flag (flagspace, flare, .97, 1.00, 1.25,
		  hip_thickness, foot_thickness);

      fet_endchar;

%----------------------------------------------------------
%     1/32 note with stem and flag
%----------------------------------------------------------

fet_beginchar ("1/32 note", "no16");
	draw_outside_ellipse (1.49 - puff_up_factor / 3.0, 31, 0.707, 0);
	black_notehead_width# := charwd;

	pickup pencircle scaled stafflinethickness;

      % draw stem

      pickup pencircle scaled stemthickness;
      hw := width - .5 stemthickness;

      pair unten;
      pair oben;
	unten := directionpoint up of pat + (-.5 stemthickness, 0);
      oben  := unten + (0, 3.5 staff_space);
      draw unten -- oben;


      % draw flags

	save flare, hip_depth_ratio, hip_width, foot_depth, foot_width_ratio;
	save flagspace, total_depth, flag_count;

	flag_count = 3;
	total_depth# = 4.25 staff_space#;
	flare = .85 staff_space;
	flagspace# = .87 staff_space#;
	hip_depth_ratio = .72;
	hip_width# = upflag_width# - hip_thickness# / 2;
	foot_width_ratio = .8;

	(flag_count - 1) * flagspace# + foot_depth# = total_depth#;

	define_pixels (hip_width, foot_depth);
	define_whole_vertical_pixels (flagspace);

%	set_char_box (0, hip_width# + right_upflag_space#,
%		      total_depth# + foot_thickness# / 2, stemthickness# / 2);

	draw_flag (oben + (0, -2 flagspace), flare, (hip_width, foot_depth),
		   hip_depth_ratio, foot_width_ratio,
		   hip_thickness, foot_thickness, 1);

	add_flag (flagspace, flare, .97, 1.00, 1.25,
		  hip_thickness, foot_thickness);
	add_flag (flagspace, flare, .95, 1.05, 1.25,
		  hip_thickness, foot_thickness);

      fet_endchar;

%----------------------------------------------------------
%     1/64 note with stem and flags
%----------------------------------------------------------

fet_beginchar ("1/64 note", "no32");
	draw_outside_ellipse (1.49 - puff_up_factor / 3.0, 31, 0.707, 0);
	black_notehead_width# := charwd;

	pickup pencircle scaled stafflinethickness;

      % draw stem

      pickup pencircle scaled stemthickness;
      hw := width - .5 stemthickness;

      pair unten;
      pair oben;
	unten := directionpoint up of pat + (-.5 stemthickness, 0);
      oben  := unten + (0, 4 staff_space);
      draw unten -- oben;


      % draw flags

	save flare, hip_depth_ratio, hip_width, foot_depth, foot_width_ratio;
	save flagspace, total_depth, flag_count;

	flag_count = 4;
	flare = .85 staff_space;
	flagspace# = .9 staff_space#;
	hip_depth_ratio = .72;
	hip_width# = upflag_width# - hip_thickness# / 2;
	total_depth# = 5.25 staff_space#;
	foot_width_ratio = .8;

	(flag_count - 1) * flagspace# + foot_depth# = total_depth#;

	define_pixels (hip_width, foot_depth);
	define_whole_vertical_pixels (flagspace);

%	set_char_box (0, hip_width# + right_upflag_space#,
%		      total_depth# + foot_thickness# / 2, stemthickness# / 2);

	draw_flag (oben + (0, -(flag_count - 1) * flagspace), flare,
		   (hip_width, foot_depth),
		   hip_depth_ratio, foot_width_ratio,
		   hip_thickness, foot_thickness, 1);

	add_flag (flagspace, flare, .97, 1.00, 1.3,
		  hip_thickness, foot_thickness);
	add_flag (flagspace, flare, 1.00, 1.00, 1.25,
		  hip_thickness, foot_thickness);
	add_flag (flagspace, flare, .95, 1.05, 1.25,
		  hip_thickness, foot_thickness);

      fet_endchar;

if 1 = 2:

%----------------------------------------------------------
%     128th Flag (up)
%----------------------------------------------------------

fet_beginchar ("128th Flag (up)", "u7");
	save flare, hip_depth_ratio, hip_width, foot_depth, foot_width_ratio;
	save flagspace, total_depth, flag_count;

	flag_count = 5;
	flare = .85 staff_space;
	flagspace# = .94 staff_space#;
	hip_depth_ratio = .72;
	hip_width# = upflag_width# - hip_thickness# / 2;
	total_depth# = 6.25 staff_space#;
	foot_width_ratio = .8;

	(flag_count - 1) * flagspace# + foot_depth# = total_depth#;

	define_pixels (hip_width, foot_depth);
	define_whole_vertical_pixels (flagspace);

	set_char_box (0, hip_width# + right_upflag_space#,
		      total_depth# + foot_thickness# / 2, stemthickness# / 2);

	draw_flag ((0, -(flag_count - 1) * flagspace), flare,
		   (hip_width, foot_depth),
		   hip_depth_ratio, foot_width_ratio,
		   hip_thickness, foot_thickness, 1);

	add_flag (flagspace, flare, .97, 1.00, 1.3,
		  hip_thickness, foot_thickness);
	add_flag (flagspace, flare, 1.00, 1.00, 1.25,
		  hip_thickness, foot_thickness);
	add_flag (flagspace, flare, .95, 1.05, 1.25,
		  hip_thickness, foot_thickness);
	add_flag (flagspace, flare, .92, 1.08, 1.25,
		  hip_thickness, foot_thickness);

	draw_square_block ((-0.5 stemthickness_rounded, 0),
			   (0, -5 staff_space_rounded));
fet_endchar;

%----------------------------------------------------------
%     128th Flag (down)
%----------------------------------------------------------

fet_beginchar ("128th (down)", "d7");
	save flare, hip_depth_ratio, hip_width, foot_depth, foot_width_ratio;
	save flagspace, total_depth, flag_count;

	flag_count = 5;
	flare = .8 staff_space;
	flagspace# = .9 staff_space#;
	hip_depth_ratio = .85;
	hip_width# = downflag_width# - hip_thickness# / 2;
	total_depth# = 5.00 staff_space#;
	foot_width_ratio = .98;

	(flag_count - 1) * flagspace# + foot_depth# = total_depth#;

	define_pixels (hip_width, foot_depth);
	define_whole_vertical_pixels (flagspace);

	set_char_box (0, hip_width# + right_downflag_space#,
		      total_depth# + foot_thickness# / 2, stemthickness# / 2);

	draw_flag ((0, -(flag_count - 1) * flagspace), flare,
		   (hip_width, foot_depth),
		   hip_depth_ratio, foot_width_ratio,
		   hip_thickness, foot_thickness, 0);

	add_flag (flagspace, flare, .97, 1.25, 1.175,
		  hip_thickness, foot_thickness);
	add_flag (flagspace, flare, .97, 1.20, 1.175,
		  hip_thickness, foot_thickness);
	add_flag (.98 flagspace, flare, .91, 1.1, 1.2,
		  hip_thickness, foot_thickness);
	add_flag (.98 flagspace, flare, .89, 1.05, 1.22,
		  hip_thickness, foot_thickness);

	draw_square_block ((-0.5 stemthickness_rounded, 0),
			   (0, -5 staff_space_rounded));

	y_mirror_char;
fet_endchar;

fi;

%----------------------------------------------------------
%     duration dot
%----------------------------------------------------------

save dot_diam;
2 dot_diam# = staff_space# - stafflinethickness#;
define_whole_blacker_pixels (dot_diam);

fet_beginchar ("duration dot dot", "dotdot");
	pickup pencircle scaled dot_diam;

	lft x0 = 0;
	top y0 = vround (.5 dot_diam);

	drawdot z0 + (0, staff_space / 2);

	set_char_box (0, dot_diam#, .5 dot_diam#, .5 dot_diam#);
fet_endchar;


%----------------------------------------------------------
%     duration dot dot
%----------------------------------------------------------

define_whole_blacker_pixels (dot_diam);

fet_beginchar ("duration dot dot", "dotdot");
	pickup pencircle scaled dot_diam;

	lft x0 = 0;
	top y0 = vround (.5 dot_diam);

	drawdot z0 + (0, staff_space / 2);
	drawdot z0 + (staff_space / 2, staff_space / 2);

	set_char_box (0, dot_diam# * 2 + staff_space# / 2, .5 dot_diam#, .5 dot_diam#);
fet_endchar;


fet_endgroup ("mscore");

